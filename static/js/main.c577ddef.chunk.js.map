{"version":3,"sources":["item.js","container.js","App.js","serviceWorker.js","index.js"],"names":["Item","name","addeddate","targetdate","this","Container","props","propsItems","items","state","handleRemoval","bind","handleChange","handleDateChange","handleListItemDateChange","handleSubmit","invalidDateHelper","item","temp","i","indexOf","splice","setState","e","inputblank","target","value","dateblank","date","Date","today","toDateString","push","dateobj","defaultdate","setDate","getDate","window","localStorage","setItem","title","JSON","stringify","type","onChange","onClick","React","Component","List","length","ls","onClickDone","onClickChange","ListItem","popupDisplay","handleClickDone","handleClickChange","t_datecolor","a","b","getFullYear","getMonth","Math","sign","className","style","display","KEYS","parseMemKey","key","x","getItem","parse","App","memory","keys","mem","parseMemAll","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c577ddef.chunk.js","sourcesContent":["/*\r\nContains everything in an Item\r\n*/\r\n\r\nexport class Item {\r\n\tconstructor(name, addeddate, targetdate) {\r\n\t\tthis.name = name\r\n\t\tthis.addeddate = addeddate\r\n\t\tthis.targetdate = targetdate\r\n\t}\r\n\t\r\n\ttoString() {\r\n\t\treturn this.name + \"|\" + this.addeddate + \"|\" + this.targetdate\r\n\t}\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport './App.css'\r\nimport Item from './item.js'\r\n//import Popup from \"reactjs-popup\"\r\n\r\nexport class Container extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tlet propsItems = this.props.items\r\n\t\tif (!propsItems) {\r\n\t\t\tpropsItems = []\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\titems: propsItems\r\n\t\t}\r\n\t\tthis.handleRemoval = this.handleRemoval.bind(this)\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n\t\tthis.handleDateChange = this.handleDateChange.bind(this)\r\n\t\tthis.handleListItemDateChange = this.handleListItemDateChange.bind(this)\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\r\n\t\tthis.invalidDateHelper = this.invalidDateHelper.bind(this)\r\n\t}\r\n\t\r\n\thandleRemoval(item) {\r\n\t\tlet temp = this.state.items\r\n\t\tlet i = temp.indexOf(item)\r\n\t\ttemp.splice(i, 1)\r\n\t\tthis.setState({items: temp})\r\n\t}\r\n\t\r\n\thandleChange(e) {\r\n\t\tthis.setState({inputblank: e.target.value})\r\n\t}\r\n\t\r\n\thandleDateChange(e) {\r\n\t\tthis.setState({dateblank: e.target.value})\r\n\t}\r\n\t\r\n\thandleListItemDateChange(item, date) {\r\n\t\tlet temp = this.state.items\r\n\t\tlet i = temp.indexOf(item)\r\n\t\ttemp.splice(i, 1, new Item(item.name, item.addeddate,\r\n\t\t\tthis.invalidDateHelper(new Date(date), new Date(item.targetdate))))\r\n\t\tthis.setState({items: temp})\r\n\t}\r\n\t\t\r\n\t\r\n\thandleSubmit() {\r\n\t\tlet temp = this.state.items\r\n\t\tlet today = new Date().toDateString()\r\n\t\tlet target = this.invalidDateHelper(new Date(this.state.dateblank))\r\n\t\ttemp.push(new Item(this.state.inputblank, today, target))\r\n\t\tthis.setState({items: temp})\r\n\t}\r\n\t\r\n\tinvalidDateHelper(dateobj, defaultdate = 0) {\r\n\t\tlet date = dateobj.toDateString()\r\n\t\tif (date === \"Invalid Date\") {\r\n\t\t\tif (defaultdate === 0) {\r\n\t\t\t\tlet temp = new Date()\r\n\t\t\t\ttemp.setDate(new Date().getDate() + 7)\r\n\t\t\t\treturn temp.toDateString()\r\n\t\t\t} else {\r\n\t\t\t\treturn defaultdate.toDateString()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn date\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidUpdate() {\r\n\t\twindow.localStorage.setItem(this.props.title, JSON.stringify(this.state.items))\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>{this.props.title}</h1>\r\n\t\t\t\t\t<input type = \"text\" value = {this.state.inputblank} onChange = {this.handleChange}/ >\r\n\t\t\t\t\t<button onClick = {this.handleSubmit}>Submit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span>Target Date: </span>\r\n\t\t\t\t<input type = \"date\" value = {this.state.dateblank} onChange = {this.handleDateChange}/ >\r\n\t\t\t\t<List \r\n\t\t\t\t\titems = {this.state.items} \r\n\t\t\t\t\thandleRemoval = {this.handleRemoval}\r\n\t\t\t\t\thandleChange = {this.handleListItemDateChange}\r\n\t\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nclass List extends React.Component {\r\n\t\r\n\trender() {\r\n\t\tif (!this.props.items || this.props.items.length < 1) {\r\n\t\t\treturn (<p>{\"Yay you're free!\"}</p>)\r\n\t\t} else {\r\n\t\t\tlet ls = []\r\n\t\t\tfor (let i of this.props.items) {\r\n\t\t\t\tls.push((<ListItem \r\n\t\t\t\t\t\t\titem = {i} \r\n\t\t\t\t\t\t\tonClickDone = {this.props.handleRemoval}\r\n\t\t\t\t\t\t\tonClickChange = {this.props.handleChange}\r\n\t\t\t\t\t\t\t/>))\r\n\t\t\t}\r\n\t\t\treturn ls\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ListItem extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tpopupDisplay: \"none\"\r\n\t\t}\r\n\t\tthis.handleClickDone = this.handleClickDone.bind(this)\r\n\t\tthis.handleClickChange = this.handleClickChange.bind(this)\r\n\t\tthis.handleDateChange = this.handleDateChange.bind(this)\r\n\t\tthis.t_datecolor = this.t_datecolor.bind(this)\r\n\t}\r\n\t\r\n\thandleClickDone() {\r\n\t\tthis.props.onClickDone(this.props.item)\r\n\t}\r\n\t\r\n\thandleClickChange() {\r\n\t\t//this.props.onClickChange(this.props.item, this.props.\r\n\t\tif (this.state.popupDisplay === \"none\") {\r\n\t\t\tthis.setState({popupDisplay: \"initial\"})\r\n\t\t} else if (this.state.popupDisplay === \"initial\") {\r\n\t\t\tthis.props.onClickChange(this.props.item, this.state.dateblank)\r\n\t\t\tthis.setState({\r\n\t\t\t\tpopupDisplay: \"none\",\r\n\t\t\t\tdateblank: \"dd/mm/yyyy\"\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleDateChange(e) {\r\n\t\tthis.setState({dateblank: e.target.value})\r\n\t}\r\n\t\t\r\n\t\r\n\tt_datecolor() {\r\n\t\tfunction datescompare(a,b) {\r\n\t\t\tif (a.getFullYear() === b.getFullYear()) {\r\n\t\t\t\tif (a.getMonth() === b.getMonth()) {\r\n\t\t\t\t\tif (a.getDate() === b.getDate()) {\r\n\t\t\t\t\t\treturn 0\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Math.sign(a.getDate() - b.getDate())\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Math.sign(a.getMonth() - b.getMonth())\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.sign(a.getFullYear() - b.getFullYear())\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tswitch (datescompare(new Date(this.props.item.targetdate), new Date())) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn \"targetdate today\"\r\n\t\t\tcase -1:\r\n\t\t\t\treturn \"targetdate past\"\r\n\t\t\tcase 1:\r\n\t\t\t\treturn \"targetdate future\"\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"targetdate\"\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className = \"listitem\">\r\n\t\t\t\t<div className = \"inlist\">\r\n\t\t\t\t\t<li>{this.props.item.name}</li>\r\n\t\t\t\t\t<p className = \"addeddate\">Added on: {this.props.item.addeddate}</p>\r\n\t\t\t\t\t<p className = {this.t_datecolor()}>Target: {this.props.item.targetdate}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"inlistbutton\">\r\n\t\t\t\t\t<button onClick = {this.handleClickDone}>Done</button>\r\n\t\t\t\t\t<button onClick = {this.handleClickChange}>{\"\\u0394\"}</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{display: this.state.popupDisplay}}>\r\n\t\t\t\t\t<span>New Target: </span>\r\n\t\t\t\t\t<input type = \"date\" value = {this.state.dateblank} onChange = {this.handleDateChange} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Container","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Container from './container.js'\n//import Item from './item.js'\n\nconst KEYS = [\"School Work\", \"Research\", \"RCY\", \"Self-Dev\"]\n\nfunction parseMemKey(key) {\n\tlet x = window.localStorage.getItem(key)\n\treturn JSON.parse(x)\n\t/*\n\t//alert(x.toString())\n\tif (!x) {\n\t\treturn []\n\t}\n\tif (x.length < 1) {\n\t\treturn []\n\t}\n\treturn x.split(\",\").map( item => {\n\t\tlet y = item.split(\"|\")\n\t\treturn new Item(y[0], y[1], y[2])\n\t})*/\n}\n\nfunction parseMemAll() {\n\tconst keys = KEYS\n\tlet mem = {}\n\tfor (let i of keys) {\n\t\tmem[i] = parseMemKey(i)\n\t}\n\treturn mem\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tlet memory = parseMemAll()\n\t\tthis.state = {\n\t\t\tmem: memory\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t<div className=\"App showborder\">\n\t\t\t<div className = \"header\">\n\t\t\t\t<h1>My Todo</h1>\n\t\t\t\t<span>Today is {new Date().toDateString()}</span>\n\t\t\t</div>\n\t\t\t<div className = \"Body showborder\">\n\t\t\t\t<Container title = {KEYS[0]} items = {this.state.mem[KEYS[0]]} />\n\t\t\t\t<Container title = {KEYS[1]} items = {this.state.mem[KEYS[1]]} />\n\t\t\t\t<Container title = {KEYS[2]} items = {this.state.mem[KEYS[2]]} />\n\t\t\t\t<Container title = {KEYS[3]} items = {this.state.mem[KEYS[3]]} />\n\t\t\t</div>\n\t\t</div>\n\t\t)\n\t}\n}\n\n/*\nfunction App() {\n\tlet mem = parseMemAll()\n\t//return (<div className = \"App\"><h1>lol</h1></div>)\n\treturn (\n\t\t<div className=\"App showborder\">\n\t\t\t<div className = \"header\">\n\t\t\t\t<h1>My Todo</h1>\n\t\t\t</div>\n\t\t\t<div className = \"Body showborder\">\n\t\t\t\t<Container title = {KEYS[0]} items = {mem[KEYS[0]]} />\n\t\t\t\t<Container title = {KEYS[1]} items = {mem[KEYS[1]]} />\n\t\t\t\t<Container title = {KEYS[2]} items = {mem[KEYS[2]]} />\n\t\t\t\t<Container title = {KEYS[3]} items = {mem[KEYS[3]]} />\n\t\t\t</div>\n\t\t</div>\n  )\t;\n}*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}